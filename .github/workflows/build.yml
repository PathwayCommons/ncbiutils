# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]

jobs:
  build:
    #----------------------------------------------
    #       os and python versions to test on
    #----------------------------------------------
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.8, 3.9]
    runs-on: ${{ matrix.os }}

    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Check-out repository
        uses: actions/checkout@v2

      #----------------------------------------------
      #       use poetry to install packages
      #----------------------------------------------
      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.1.13
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install library
        run: poetry install --no-interaction

      #----------------------------------------------
      #              run tests
      #----------------------------------------------
      - name: Format code
        run: poetry run black ./ncbiutils

      - name: Lint code
        run: |
          poetry run flake8 ./ncbiutils --count --select=E9,F63,F7,F82 --show-source --statistics
          poetry run flake8 ./ncbiutils --count --exit-zero --max-complexity=10 --statistics

      - name: Test with pytest
        run: poetry run pytest tests --cov ./ncbiutils --cov-report=xml

    # - name: Type check with mypy
    #   run: |
    #     mypy . --cache-dir=/dev/null
    # - name: Upload coverage to Codecov
    #   # We don't want to push coverge for every job in the matrix.
    #   # Rather arbitrarily, choose to push on Ubuntu with Python 3.7.
    #   if: matrix.python-version == '3.7' && matrix.os == 'ubuntu-latest'  && (github.event_name == 'push' || github.event_name == 'pull_request')
    #   uses: codecov/codecov-action@v3
    #   with:
    #     file: ./coverage.xml
    #     # Ignore codecov failures as the codecov server is not
    #     # very reliable but we don't want to report a failure
    #     # in the github UI just because the coverage report failed to
    #     # be published.
    #     fail_ci_if_error: false
